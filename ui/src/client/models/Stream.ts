/* tslint:disable */
/* eslint-disable */
/**
 * dlphn-rs
 * A simple data logging server written in Rust.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Stream
 */
export interface Stream {
    /**
     * 
     * @type {number}
     * @memberof Stream
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Stream
     */
    key?: string;
    /**
     * 
     * @type {string}
     * @memberof Stream
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof Stream
     */
    updated?: string;
}

export function StreamFromJSON(json: any): Stream {
    return StreamFromJSONTyped(json, false);
}

export function StreamFromJSONTyped(json: any, ignoreDiscriminator: boolean): Stream {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'key': !exists(json, 'key') ? undefined : json['key'],
        'created': !exists(json, 'created') ? undefined : json['created'],
        'updated': !exists(json, 'updated') ? undefined : json['updated'],
    };
}

export function StreamToJSON(value?: Stream | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'key': value.key,
        'created': value.created,
        'updated': value.updated,
    };
}


