/* tslint:disable */
/* eslint-disable */
/**
 * dlphn-rs
 * A simple data logging server written in Rust.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Data
 */
export interface Data {
    /**
     * 
     * @type {number}
     * @memberof Data
     */
    id?: number;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof Data
     */
    payload?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof Data
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof Data
     */
    updated?: string;
}

export function DataFromJSON(json: any): Data {
    return DataFromJSONTyped(json, false);
}

export function DataFromJSONTyped(json: any, ignoreDiscriminator: boolean): Data {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'payload': !exists(json, 'payload') ? undefined : json['payload'],
        'created': !exists(json, 'created') ? undefined : json['created'],
        'updated': !exists(json, 'updated') ? undefined : json['updated'],
    };
}

export function DataToJSON(value?: Data | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'payload': value.payload,
        'created': value.created,
        'updated': value.updated,
    };
}


